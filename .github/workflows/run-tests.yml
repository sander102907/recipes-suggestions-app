name: Test Application

on:
  pull_request:
    branches: [main, master]
    types: [opened, reopened, synchronize]

jobs:
  test-frontend:
    name: Test frontend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run tests & generate coverage report
      uses: artiomtr/jest-coverage-report-action@v2.0.6
      with:
        working-directory: ./frontend
        package-manager: yarn
        test-script: yarn test --silent --coverage --coverageReporters="text" --coverageReporters="text-summary"
        #threshold: 80
  test-backend:
    name: Test backend
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: prisma
          MYSQL_DATABASE: tests
        ports:
          - 3306:3306
    env:
      DATABASE_URL: mysql://root:prisma@localhost:3306/tests
    steps:
    # - name: Use Node.js
    #   uses: actions/setup-node@v1
    #   with:
    #     node-version: 17.x
    - uses: actions/checkout@v2
    - name: Run tests & generate coverage report
      uses: mattallty/jest-github-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # this is just an example, this could be any command that will trigger jest
        test-command: "npm test"
        working-directory: "./backend"
      # uses: artiomtr/jest-coverage-report-action@v2.0.6
      # with:
      #   working-directory: ./backend
      #   package-manager: npm
      #   test-script: npm test --silent --coverage
      #   threshold: 80
    
